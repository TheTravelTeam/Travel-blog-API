services:
  app:
    image: aperal/travel-blog-api:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_USER_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      CORS_ALLOWED_ORIGIN: ${CORS_ALLOWED_ORIGIN}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - traefik         # pour que Traefik voie le service
      - backend         # réseau privé app <-> db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.travelblog-api.rule=Host(`api.travel-blog.cloud`)"
      - "traefik.http.routers.travelblog-api.entrypoints=websecure"
      - "traefik.http.routers.travelblog-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.travelblog-api.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik"


  db:
    image: mysql:8
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_USER_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 60
    networks:
      - backend

networks:
  traefik:
    external: true
  backend:
    driver: bridge

volumes:
  db-data: